///$tab Change Log
/*
1.0.1 - 04/12/13
----------------
* Added badge.

1.0.0 - 28/11/13
----------------
* Initial Release

*/
///$tab Main
SET ThousandSep=',';
SET DecimalSep='.';
SET MoneyThousandSep=',';
SET MoneyDecimalSep='.';
SET MoneyFormat='£#,##0.00;-£#,##0.00';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET MonthNames='Jan;Feb;Mar;Apr;May;Jun;Jul;Aug;Sep;Oct;Nov;Dec';
SET DayNames='Mon;Tue;Wed;Thu;Fri;Sat;Sun';

//
// This can be any folder where QVSource has read and write access. 
// We recommend runninf QVSource from c:\QVSource\ and having a Temp
// sub folder underneath this.
//
let vWorkingFolder = 'c:\QVSource\Temp\';

//
// This is an identifier for the app and can be left blank. It is used 
// for example in QVSource logging to distinguish requests from different 
// applications.
//
let vQVSourceAppId = 'BlueYonderSample';

// *****************************************************************************
// QVSource caches the demand predictions from Blue Yonder as they remain the 
// same in most cases.
//
// Uncomment the following block if you need to clear the cache for some reason.
// *****************************************************************************
//
//ClearCache:
//LOAD
//QVSource_ClearCache_Result,
//QVSource_ClearCache_SearchPattern,
//QVSource_ClearCache_NoItemsDeleted
//FROM
//[http://localhost:5555/QVSource/BlueYonderConnector/?clearcache=true]
//(txt, utf8, embedded labels, delimiter is '\t', msq); 


//
// This will be a CSV file containing either:
// * All combinations of location and product IDs.
// * All products IDs
// * All location IDs
//
// To request demand predictions for from Blue Yonder. The connector will 
// run these prediction requests on parallel threads for optimum 
// performance.
//
let vParamsFile = '$(vWorkingFolder)$(vQVSourceAppId)' & '_AsyncParams.txt';
  
//
// In are example here - we will request demand predictions based on location 
// ID. In other words, each single request to Blue Yonder will request the 
// full horizon of predictions for all products of a single location at a time.
//
// You could also do this by product ID or by both location ID and product ID.
//
// Please liase with Blue Yonder for the optimum way to do this for your 
// data set.
//
Params:
load distinct                          
LocationID
FROM
[Data\SampleLocationAndProductIDs.txt]
(txt, utf8, embedded labels, delimiter is ',', msq);

store Params into '$(vParamsFile)' (txt);

//
// Note - the url below could also contain the following parameters. However, by default if these 
// are missing then QVSource will fall back on the parameters defined in the connector itself.
//
// &UserName={YOUR BLUE YONDER USERNAME}&Password={YOUR QVSOURCE ENCRYPTED BLUE YONDER PASSWORD}&TenantID={YOUR BLUE YONDER TENANT ID}
//
// You can also add a prediction day parameter (see connector) if you only need a prediction for a single day.

let vCount = NoOfRows('Params');
trace 'About to request demand predictions for $(vCount) rows (products / locations) asynchronously';

BlueYonderConnector_DemandPredictions:
LOAD
	PredictionDay as DemandPredictions_PredictionDay,
	date#(PredictionDay, 'YYYY-MM-DD') as DemandPredictions_PredictionDay_QVDate,
	LocationID as DemandPredictions_LocationID,
	ProductID as DemandPredictions_ProductID,
	UnitID as DemandPredictions_UnitID,
	Mean as DemandPredictions_Mean
FROM
[http://localhost:5555/QVSource/BlueYonderConnector/?table=DemandPredictions&appID=$(vQVSourceAppId)&processParamsAsync=$(vParamsFile)]
(qvx);

drop table Params;